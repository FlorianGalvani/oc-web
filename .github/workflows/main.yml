name: Deploy React App

on:
  push:
    branches: [ main ]

jobs:
  # Job de Test
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Cache Node Modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Dependencies
      run: npm install

    - name: Run React test
      run: npm run test

  # Job de Build
  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Cache Node Modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Dependencies
      run: npm install

    - name: Build
      run: npm run build

  # Job de Déploiement
  deploy:
    needs: build  # Ce job dépend du succès du job 'build'.
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Copy files to the server
      uses: easingthemes/ssh-deploy@v2.1.5  # Utilise l'action ssh-deploy pour le déploiement.
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Clé SSH privée stockée dans les secrets GitHub.
        SOURCE: "build/"  # Dossier source contenant les fichiers à déployer.
        REMOTE_HOST: ${{ secrets.HOST }}  # Adresse du serveur distant.
        REMOTE_USER: ${{ secrets.SSH_USER }}  # Utilisateur pour la connexion SSH.
        REMOTE_PORT: "22"  # Port SSH (22 est le port par défaut).
        TARGET: "~/web/app"  # Dossier cible sur le serveur distant.
